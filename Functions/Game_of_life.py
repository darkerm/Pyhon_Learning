'''
Условие
Требуется написать программу, вычисляющую следующую итерацию игры «Жизнь». Игра проходит в прямоугольной области размером N на M, состоящей из символов точка (.),
обозначающий мёртвую клетку, и решётка (#), обозначающий живую. Новое состояние каждой клетки определяется состоянием её 8 соседей по следующим правилам:

если мёртвая клетка имеет ровно три живых соседа, она становится живой;
если живая клетка имеет меньше двух или больше трёх живых соседей, она становится мёртвой;
иначе состояние клетки не изменяется.
При этом соседями граничных клеток будут соответствующие граничные клетки с другой стороны области. Так, левым соседом самой левой клетки поля будет являться самая правая клетка в той же строке.
При решении задачи запрещено использовать библиотеку numpy.

Формат входных данных
Входные данные содержат текущее состояние игры.

Формат выходных данных
Выходные данные должны содержать следующую итерацию игры в том же формате.
'''
a = []
while True:
    try:
        line = input()
    except EOFError:
        break
    a.append(line)

def checkgrid(i,j):
    countof = 0
    line = a[i-1][j-1] + a[i-1][j] + a[i-1][j - len(a[i]) + 1]
    countof = countof + line.count("#")
    line = a[i][j-1] + a[i][j - len(a[i]) + 1]
    countof = countof + line.count("#")
    line = a[i - len(a) + 1][j-1] + a[i - len(a) + 1][j] + a[i - len(a) + 1][j - len(a[i]) + 1]
    countof = countof + line.count("#")
    return countof

final = []

for i in range(len(a)):
    newstr = ""
    for j, y in enumerate(a[i]):
        c = checkgrid(i,j)
        if y == "." and c == 3:
            newstr = newstr + "#"
        elif y == "#" and 2 > c or c > 3:
            newstr = newstr + "."
        else:
            newstr = newstr + y
    final.append(newstr)
print("\n".join(final))