'''
Условие
Требуется выполнить программу для детерминированной машины Тьюринга.

Пусть задана машина Тьюринга с алфавитом и множеством состояний.
Программа, которую требуется выполнить, описывается тройками значений для каждой пары "символ"/"состояние"
    Символ, который требуется записать на ленту;
    Направление движение указателя машины: "L" — влево, "R" — вправо, "N" — не сдвигать указатель;
    Состояние, в которое переходит машина.
Программа исполняется на бесконечной ленте заполненной символом 0.
Изначально машина находится в состоянии 0 на позиции 0 и заканчивает работу при достижении состояния M.

Формат входных данных
Первая строка входных данных содержит натуральные числа N, M, K
— размер алфавита, множества состояний и входных данных программы. Далее следуют
N строк по M троек — описание программы. Последняя строка файла содержит текущие состояние ленты длины K.

Формат выходных данных
Выходные данные должны содержать состояние ленты начиная с позиции указателя, в которой машина завершила работу, до последней ячейки, посещённой указателем.

Ограничения
1≤N≤10, 1≤M≤20, 1≤K≤10^5.
Максимальная длина ленты, необходимая для выполнения программы, не превышает 10^5.
'''

n, m, k = map(int, input().split())

raw_command = [input().split() for i in range(n)]
command = []
for i in raw_command:
    command.append(list(zip(*[iter(i)] * 3)))

raw_tape = list(map(int, input().split()))
tape = [0] * 100000
tape[50000:50000] = raw_tape

state = 0
position = 50000
old_position = 0
alphabet = tape[position]

while state != m:
    tape[position] = int(command[alphabet][state][0])
    if command[alphabet][state][1] == "L":
        position -= 1
    elif command[alphabet][state][1] == "R":
        position += 1
    state = int(command[alphabet][state][2])
    alphabet = int(tape[position])
    if old_position < position:
        old_position = position
print(" ".join(map(str, tape[position:old_position + 1])))